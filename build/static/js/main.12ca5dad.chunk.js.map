{"version":3,"sources":["components/Form.js","components/NavList.js","components/User.js","components/Logout.js","App.js","serviceWorker.js","index.js"],"names":["Form","react_default","a","createElement","Fragment","className","onSubmit","this","props","formProps","handleSubmit","onChange","handleChange","ident","type","value","userName","password","hasFailed","Component","NavList","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","wantsOut","changeWantsOut","bind","assertThisInitialized","ev","setState","unauthorize","NavLink","to","onClick","Redirect","UserPage","NavList_NavList","Route","exact","path","render","Logout","isRedirectSet","_this2","setTimeout","resetFields","App","isAuth","changeFormField","event","target","getAttribute","preventDefault","BrowserRouter","Form_Form","Switch","Logout_Logout","User_UserPage","Boolean","window","location","hostname","match","ReactDOM","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12ca5dad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Form extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <h2 className=\"title text-primary text-center my-4\">Welcome to our starting Page</h2>\r\n        <div className=\"container my-4\">\r\n          <div className=\"jumbotron\">\r\n            <form className=\"text-center\" onSubmit={this.props.formProps.handleSubmit}>\r\n              <div className=\"input-group mb-3 input-group-lg\">\r\n                 <div className=\"input-group-prepend\">\r\n                   <span className=\"input-group-text\">Username</span>\r\n                </div>\r\n                <input onChange={this.props.formProps.handleChange} ident=\"usr\" type=\"text\" className=\"form-control\" value={this.props.formProps.userName} />\r\n              </div>\r\n              <div className=\"input-group mb-3 input-group-lg\">\r\n                 <div className=\"input-group-prepend\">\r\n                   <span className=\"input-group-text\">Password</span>\r\n                </div>\r\n                <input onChange={this.props.formProps.handleChange} ident=\"pwd\" type=\"password\" className=\"form-control\" value={this.props.formProps.password}/>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary btn-lg\">Log in</button>\r\n            </form>\r\n            {this.props.formProps.hasFailed && <div className=\"alert alert-danger my-4\">Either username or password was incorrect. Try again!</div>}\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\n\r\nexport default class NavList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {wantsOut: false};\r\n    this.changeWantsOut = this.changeWantsOut.bind(this);\r\n  }\r\n\r\n  changeWantsOut(ev) {\r\n    this.setState({wantsOut: true});\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.unauthorize();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <ul className=\"nav my-4\">\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/user\" className=\"nav-link\">Main</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/user/dashboard\" className=\"nav-link\">Dashboard</NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink to=\"/user/friends\" className=\"nav-link\">Your Friends</NavLink>\r\n          </li>\r\n          <li className=\"nav-item float-right\">\r\n            <button onClick={this.changeWantsOut} className=\"btn btn-danger btn-sm\">Sign Out</button>\r\n          </li>\r\n        </ul>\r\n        {this.state.wantsOut && <Redirect to=\"/logout\" />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport NavList from './NavList';\r\nimport { Route } from 'react-router-dom';\r\n\r\nexport default class UserPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container my-4\">\r\n        <NavList unauthorize={this.props.unauthorize}/>\r\n        <div className=\"jumbotron\">\r\n          <Route exact path=\"/user\" render={() => <h2>Hello {this.props.userName}</h2>}/>\r\n          <Route path=\"/user/dashboard\" render={() => <h2>That is your dashboard</h2>}/>\r\n          <Route path=\"/user/friends\" render={() => <h2>These are your friends</h2>}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\n\r\nexport default class Logout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isRedirectSet: false};\r\n  }\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.setState({isRedirectSet: true}), 5000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.resetFields();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <div className=\"container my-4\">\r\n        <div className=\"jumbotron\">\r\n          <h2 className=\"title\">You just logged out! In 5 secs you will be redirected to home page!</h2>\r\n          <p className=\"lead\">If not click <NavLink to=\"/\">here</NavLink></p>\r\n        </div>\r\n      </div>\r\n      {this.state.isRedirectSet && <Redirect to=\"/\" />}\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Form from './components/Form';\r\nimport UserPage from './components/User';\r\nimport Logout from './components/Logout';\r\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {userName: '', password: '', hasFailed: false, isAuth: false}\r\n    this.changeFormField = this.changeFormField.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.unauthorize = this.unauthorize.bind(this);\r\n    this.resetFields = this.resetFields.bind(this);\r\n  }\r\n\r\n  changeFormField(event) {\r\n    switch(event.target.getAttribute('ident')) {\r\n      case 'usr':\r\n        this.setState({userName: event.target.value});\r\n        break;\r\n      case 'pwd':\r\n        this.setState({password: event.target.value});\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.state.userName === 'Jake' && this.state.password === '123') {\r\n      this.setState({hasFailed: false, isAuth: true});\r\n    } else {\r\n      this.setState({hasFailed: true});\r\n    }\r\n  }\r\n\r\n  unauthorize() {\r\n    this.setState({isAuth: false});\r\n  }\r\n\r\n  resetFields() {\r\n    this.setState({userName: '', password: ''});\r\n  }\r\n\r\n  render() {\r\n    const formProps = {\r\n      userName: this.state.userName,\r\n      password: this.state.password,\r\n      handleChange: this.changeFormField,\r\n      handleSubmit:this.handleSubmit,\r\n      hasFailed: this.state.hasFailed\r\n    }\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <>\r\n          <Route exact path=\"/\" render={() => <Form formProps={ formProps } />} />\r\n          <Switch>\r\n            <Route path=\"/logout\" render={() => <Logout resetFields={this.resetFields}/>} />\r\n            <Route path=\"/user\" render={() => <UserPage unauthorize={this.unauthorize} userName={this.state.userName}/>} />\r\n            {this.state.isAuth && <Redirect to=\"/user\" />}\r\n          </Switch>\r\n        </>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}